version: '3.8'
services:
  backend:
    platform: linux/arm64/v8
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_SERVLET_CONTEXT_PATH=/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/laptop_inventory
    volumes:
      - ./backend/src/main/resources/db/migration:/app/db/migration
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - laptop-network
      
  frontend:
    platform: linux/arm64/v8
    build: ./frontend
    ports:
      - "5173:5173"  
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev  
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - laptop-network

  db:
    platform: linux/arm64/v8
    image: postgres:14
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - laptop-network

networks:
  laptop-network:
    driver: bridge